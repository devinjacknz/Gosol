
volumes:
  postgres_data:
  redis_data:

services:
  postgres:
    extends:
      file: docker-compose.yml
      service: postgres
    environment:
      POSTGRES_DB: solmeme_trader_staging

  redis:
    extends:
      file: docker-compose.yml
      service: redis

  backend:
    extends:
      file: docker-compose.yml
      service: backend
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/solmeme_trader_staging?sslmode=disable
      - REDIS_URL=redis://redis:6379/0
      - SOLANA_RPC_ENDPOINT=https://api.mainnet-beta.solana.com
      - ML_SERVICE_URL=http://ml-service:8000
      - GIN_MODE=release
      - DYDX_API_ENDPOINT=https://api.dydx.exchange
      - HYPERLIQUID_API_ENDPOINT=https://api.hyperliquid.xyz
      - LOG_LEVEL=info
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G

  ml-service:
    extends:
      file: docker-compose.yml
      service: ml-service
    environment:
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - LOG_LEVEL=info
      - USE_TEST_NETWORK=false
      - DYDX_TEST_MODE=false
      - HYPERLIQUID_TEST_MODE=false
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G

  frontend:
    extends:
      file: docker-compose.yml
      service: frontend
    environment:
      - NEXT_PUBLIC_BACKEND_URL=http://backend:8080
      - NEXT_PUBLIC_WS_URL=ws://backend:8080/ws
      - NEXT_PUBLIC_API_URL=http://backend:8080
      - NEXT_PUBLIC_ENV=staging
    ports:
      - "3000:3000"
    depends_on:
      - backend
      - ml-service
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 3
